local Tar = "nill"
local TarDistance = 0
local TarPos = false

-- function VARIABLES
--combad
local killAura = false
local lockonTarget = false
local TargetDistance = 50
local HitSpeed = 1000

local selceted = ""

local AutoLog = false
local AutoLogLevens = 3
--move ment
local setPlayerSpeed = false
local playerSpeed = 16

local FreeCam = false
local USpeed = 3
local FSpeed = 3
--misc
local Nuker = false
local NukerSize = 5
--visuals
local Esp = false
local EspTrans = 0.4
local EspColor = Color3.fromRGB(0.0348226,1,0)
local EspColorDemage = Color3.fromRGB(1,0,0)
----------------------------------------------------
function setPart( x,y,z,name,cancol,Trans,Size)
    local part = Instance.new("Part",workspace)
    part.Anchored = true
    part.Transparency = Trans
    part.Size = Vector3.new(Size,Size,Size)
    part.Position = Vector3.new(x,y,z)
    part.Name = name
    part.CanCollide = cancol
end

local function setSavePart( part,ox,oy,oz,ax,ay,az )
    part.Position = Vector3.new(
        ox+ax,
        oy+ay,
        oz+az
    )
end

local function setAllSaveParts(x,y,z)
    local WorkSpace = game:GetService("Workspace")
    setSavePart(WorkSpace.savePartt,x,y,z,0,-4.5,0)
    setSavePart(WorkSpace.savePartxp,x,y,z,4,0,0)
    setSavePart(WorkSpace.savePartxm,x,y,z,-4,0,0)
    setSavePart(WorkSpace.savePartzp,x,y,z,0,0,4)
    setSavePart(WorkSpace.savePartzm,x,y,z,0,0,-4)
end

local function SetColide(Bool)
    local WorkSpace = game:GetService("Workspace")
    WorkSpace.savePartt.CanCollide = Bool
    WorkSpace.savePartxp.CanCollide = Bool
    WorkSpace.savePartxm.CanCollide = Bool
    WorkSpace.savePartzp.CanCollide = Bool
    WorkSpace.savePartzm.CanCollide = Bool
end

setPart(1,1,1,"LockPlayer",false,1,5)
setPart(1,1,1,"LockOntarGetPart",false,1,2)
function killAuraFunc()
    spawn(function()
        local Players = game:GetService("Players")
        local Player = Players.LocalPlayer

        local WorkSpace = game:GetService("Workspace")
        while killAura do
            wait(HitSpeed/1000)
            if WorkSpace:FindFirstChild(Player.Name) then
                local PlayerW = WorkSpace:FindFirstChild(Player.Name)
                local PlayerTable = {}
                for i, v in pairs(Players:GetChildren()) do
                    local PlayerName = v.Name
                    local PlayerLoopW = WorkSpace:FindFirstChild(v.Name)
                    if PlayerLoopW then
                        if PlayerLoopW:FindFirstChild("HumanoidRootPart") then
                            if Player.Name == v.Name then
                            else
                               PlayerTable[PlayerName] = PlayerLoopW.HumanoidRootPart.Position
                            end
                        end
                    end
                end
                local Close = "nill"
                local CloseDistance = TargetDistance
                local ClosePos = false
                for i, v in pairs(PlayerTable) do
                    local TXPos = v.X
                    local TYPos = v.Y
                    local TZPos = v.Z

                    local playerXPos = PlayerW.HumanoidRootPart.Position.X
                    local playerYPos = PlayerW.HumanoidRootPart.Position.Y
                    local playerZPos = PlayerW.HumanoidRootPart.Position.Z

                    local XDistance = math.abs(TXPos-playerXPos)
                    local YDistance = math.abs(TYPos-playerYPos)
                    local ZDistance = math.abs(TZPos-playerZPos)

                    local Distance = ((XDistance^2)+(YDistance^2)+(ZDistance^2))^0.5
                    if CloseDistance > Distance then
                        CloseDistance = Distance
                        Close = i
                        ClosePos = v
                    end
                end
                Tar = Close
                TarDistance = CloseDistance
                TarPos = ClosePos
                if Close == "nill" then
                else
                    if ClosePos == false then
                    else

                        if lockonTarget then
                            local xLockPos = ClosePos.X
                            local yLockPos = ClosePos.Y
                            local zLockPos = ClosePos.Z
                            if yLockPos<30 then
                                yLockPos = 30
                            end
                            WorkSpace:FindFirstChild("LockOntarGetPart").Position = Vector3.new(
                                xLockPos,
                                yLockPos+6,
                                zLockPos
                            )
                            SetColide(true)
                            setAllSaveParts(xLockPos,yLockPos+6,zLockPos)
                            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = WorkSpace:FindFirstChild("LockOntarGetPart").CFrame
                        end
                        WorkSpace:FindFirstChild("LockPlayer").Position = Vector3.new(
                            ClosePos.X,
                            ClosePos.Y,
                            ClosePos.Z
                        )
                        local args = {
                            [1] = game:GetService("Players"):FindFirstChild(Close).Character
                        }
                        
                        game:GetService("ReplicatedStorage").GameRemotes.Attack:InvokeServer(unpack(args))
                        
                    end
                end
            end
        end
        Tar = "nill"
        TarDistance = 0
        TarPos = false
    end)
end

function AutoLogFunc()
    spawn(function()
        while AutoLog do
            wait(0.2)
            local levens = 0
            for i ,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.HUDGui.Hotbar.HealthBar:GetChildren()) do
                if v.ImageColor3.R == 1 then
                    levens = levens + 1
                end
            end
            if levens < AutoLogLevens then
                game:GetService("Players").LocalPlayer:Kick("You have "..levens.." healf the auto log module has kicked you")
            end
        end
    end)
end

--game:GetService("ReplicatedStorage").GameRemotes.SortItem.Name = "Nill"
-- auto craft sword
function AutoSwordCraftFunc()
    spawn(function()
        local args = {[1] = 16,[2] = -1}
        game:GetService("ReplicatedStorage").GameRemotes.MoveItem:InvokeServer(unpack(args))
        wait(0.1)
        local args = {[1] = -1,[2] = 87,[3] = 64,[4] = 1}
        game:GetService("ReplicatedStorage").GameRemotes.MoveItem:InvokeServer(unpack(args))
        wait(0.1)
        local args = {[1] = -1,[2] = 16,[3] = 64}
        game:GetService("ReplicatedStorage").GameRemotes.MoveItem:InvokeServer(unpack(args))
        wait(0.1)
        local args = {[1] = 17,[2] = -1}
        game:GetService("ReplicatedStorage").GameRemotes.MoveItem:InvokeServer(unpack(args))
        wait(0.1)
        local args = {[1] = -1,[2] = 84,[3] = 9,[4] = 1}
        game:GetService("ReplicatedStorage").GameRemotes.MoveItem:InvokeServer(unpack(args))
        wait(0.1)
        local args = {[1] = -1,[2] = 81,[3] = 9,[4] = 1}
        game:GetService("ReplicatedStorage").GameRemotes.MoveItem:InvokeServer(unpack(args))
        wait(0.1)
        local args = {[1] = -1,[2] = 17,[3] = 64}
        game:GetService("ReplicatedStorage").GameRemotes.MoveItem:InvokeServer(unpack(args))
        wait(0.1)
        local args = {[1] = Vector3.new(43, 8, 13)}
        game:GetService("ReplicatedStorage").GameRemotes.CraftItems:InvokeServer(unpack(args))
        wait(0.1)
        local args = {[1] = -1,[2] = 8,[3] = true}
        game:GetService("ReplicatedStorage").GameRemotes.MoveItem:InvokeServer(unpack(args))

    end)
end

function setPlayerSpeedFunc()
    spawn(function()
        while setPlayerSpeed do
            wait(0.5)
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = playerSpeed
        end
    end)
end
---------------------------- freecam
local walkF = false
local walkB = false
local walkL = false
local walkR = false
local walkU = false
local walkD = false
local useriput = game:GetService("UserInputService")

useriput.InputBegan:Connect(function(keycode)
	if keycode.KeyCode == Enum.KeyCode.W then
		walkF = true
	end
	if keycode.KeyCode == Enum.KeyCode.S then
		walkB = true
	end
	if keycode.KeyCode == Enum.KeyCode.A then
		walkL = true
	end
	if keycode.KeyCode == Enum.KeyCode.D then
		walkR = true
	end
	if keycode.KeyCode == Enum.KeyCode.Space then
		walkU = true
	end
	if keycode.KeyCode == Enum.KeyCode.LeftShift then
		walkD = true
	end
end)

useriput.InputEnded:Connect(function(keycode)
	if keycode.KeyCode == Enum.KeyCode.W then
		walkF = false
	end
	if keycode.KeyCode == Enum.KeyCode.S then
		walkB = false
	end
	if keycode.KeyCode == Enum.KeyCode.A then
		walkL = false
	end
	if keycode.KeyCode == Enum.KeyCode.D then
		walkR = false
	end
	if keycode.KeyCode == Enum.KeyCode.Space then
		walkU = false
	end
	if keycode.KeyCode == Enum.KeyCode.LeftShift then
		walkD = false
	end
end)

local ts = game:GetService("TweenService")
setPart(1,1,1,"CemeraPart",false,1,2)
setPart(1,1,1,"savePartt",true,1,3)
setPart(1,1,1,"savePartxp",true,1,5)
setPart(1,1,1,"savePartxm",true,1,5)
setPart(1,1,1,"savePartzp",true,1,5)
setPart(1,1,1,"savePartzm",true,1,5)

function FreeCamFunc()
    spawn(function()
        local WorkSpace = game:GetService("Workspace")
        WorkSpace.CemeraPart.CFrame = game:GetService("Players").LocalPlayer.Character.Head.CFrame
        local cam = WorkSpace.CurrentCamera
        cam.CameraSubject = WorkSpace.CemeraPart
        local x = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.X
        local y = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.Y
        local z = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position.Z
        SetColide(true)
        setAllSaveParts(x,y,z)

        local playerMod = require(game:GetService("Players").LocalPlayer.PlayerScripts.PlayerModule)
        local Controls = playerMod:GetControls()
        Controls:Disable()
        while FreeCam do
            wait(0.1)
            local CemeraPartPos = WorkSpace.CemeraPart.Position
            WorkSpace.CemeraPart.CFrame = cam.CFrame
            local orientationY = WorkSpace.CemeraPart.Orientation.Y
            WorkSpace.CemeraPart.Position = CemeraPartPos

            local xGoal = WorkSpace.CemeraPart.Position.X
            local yGoal = WorkSpace.CemeraPart.Position.Y
            local zGoal = WorkSpace.CemeraPart.Position.Z

            if walkF then
                local degree = orientationY
                degree = 340 - degree
                degree = degree - 70
                xGoal = xGoal + (FSpeed * math.cos(math.rad(degree)))
                zGoal = zGoal + (FSpeed * math.sin(math.rad(degree)))
            end
            if walkB then
                local degree = orientationY
                degree = 340 - degree
                degree = degree - 70 - 180
                xGoal = xGoal + (FSpeed * math.cos(math.rad(degree)))
                zGoal = zGoal + (FSpeed * math.sin(math.rad(degree)))
            end
            if walkR then
                local degree = orientationY
                degree = 340 - degree
                degree = degree - 70 + 90
                xGoal = xGoal + (FSpeed * math.cos(math.rad(degree)))
                zGoal = zGoal + (FSpeed * math.sin(math.rad(degree)))
            end
            if walkL then
                local degree = orientationY
                degree = 340 - degree
                degree = degree - 70 - 90
                xGoal = xGoal + (FSpeed * math.cos(math.rad(degree)))
                zGoal = zGoal + (FSpeed * math.sin(math.rad(degree)))
            end
            if walkU then
                yGoal = yGoal + USpeed
            end
            if walkD then
                yGoal = yGoal - USpeed
            end

            local info = TweenInfo.new(
                0.1,
                Enum.EasingStyle.Linear,
                Enum.EasingDirection.Out,
                0,
                false,
                0
            )
            local goal = {}
            goal.Position = Vector3.new(xGoal,yGoal,zGoal)
            local partTween = ts:Create(WorkSpace.CemeraPart, info, goal)
            partTween:Play()

        end
        SetColide(false)
        Controls:Enable()
        cam.CameraSubject = WorkSpace:WaitForChild(game:GetService("Players").LocalPlayer.Name).Humanoid
    end)
end
----------------------------------------nuker
function DeleteBlock(x,y,z)
    local args = {[1] = x,[2] = y,[3] = z}
    game:GetService("ReplicatedStorage").GameRemotes.BreakBlock:FireServer(unpack(args))
    game:GetService("ReplicatedStorage").GameRemotes.AcceptBreakBlock:InvokeServer()
end

function NukerFunc()
    spawn(function()
        local Players = game:GetService("Players")
        local Player = Players.LocalPlayer
        local WorkSpace = game:GetService("Workspace")
        while Nuker do
            wait(0.1)
            if true then
                local playerW = Player.Character
                local PlayerX = math.floor(playerW.HumanoidRootPart.Position.X/3+0.5)
                local PlayerY = math.floor(playerW.HumanoidRootPart.Position.Y/3+0.5)-1
                local PlayerZ = math.floor(playerW.HumanoidRootPart.Position.Z/3+0.5)
                for x = 0-NukerSize,NukerSize do
                    for z = 0-NukerSize,NukerSize do
                        DeleteBlock(PlayerX+x,PlayerY-1,PlayerZ+z)
                    end
                end
            end
        end
    end)
end

function EspFunc()
    spawn(function()
        local Players = game:GetService("Players")
        local Player = Players.LocalPlayer
        local WorkSpace = game:GetService("Workspace")
        while Esp do
            wait(0.5)
            local PlayersW = {}
            local PlayersWValue = 0
            for i,v in pairs(Players:GetChildren()) do
                if WorkSpace:FindFirstChild(v.Name) then
                    if v.Character:FindFirstChild("HumanoidRootPart") then
                        PlayersWValue = PlayersWValue + 1
                        PlayersW[PlayersWValue] = v.Name
                    end
                end
            end
            for i, v in pairs(PlayersW) do
                if v == Player.Name then
                    PlayersW[i] = ""
                end
            end
            for i, v in pairs(PlayersW) do
                if WorkSpace:FindFirstChild(v) then
                    local HumanoidRootPart = WorkSpace:FindFirstChild(v):FindFirstChild("HumanoidRootPart")
                    if HumanoidRootPart:FindFirstChild("HasEps") then
                        local sF = HumanoidRootPart.sF.Frame
                        sF.Transparency = EspTrans
                        if v == Tar then
                            sF.BackgroundColor3 = EspColorDemage
                        else
                            sF.BackgroundColor3 = EspColor
                        end
                        local sF = HumanoidRootPart.sB.Frame
                        sF.Transparency = EspTrans
                        if v == Tar then
                            sF.BackgroundColor3 = EspColorDemage
                        else
                            sF.BackgroundColor3 = EspColor
                        end
                        local sF = HumanoidRootPart.sR.Frame
                        sF.Transparency = EspTrans
                        if v == Tar then
                            sF.BackgroundColor3 = EspColorDemage
                        else
                            sF.BackgroundColor3 = EspColor
                        end
                        local sF = HumanoidRootPart.sT.Frame
                        sF.Transparency = EspTrans
                        if v == Tar then
                            sF.BackgroundColor3 = EspColorDemage
                        else
                            sF.BackgroundColor3 = EspColor
                        end
                        local sF = HumanoidRootPart.sL.Frame
                        sF.Transparency = EspTrans
                        if v == Tar then
                            sF.BackgroundColor3 = EspColorDemage
                        else
                            sF.BackgroundColor3 = EspColor
                        end
                        local sF = HumanoidRootPart.sBo.Frame
                        sF.Transparency = EspTrans
                        if v == Tar then
                            sF.BackgroundColor3 = EspColorDemage
                        else
                            sF.BackgroundColor3 = EspColor
                        end
                    else
                        local HasEps = Instance.new("BoolValue",HumanoidRootPart)
                        HasEps.Name = "HasEps"
                        local sF = Instance.new("SurfaceGui",HumanoidRootPart)
                        sF.AlwaysOnTop = true
                        sF.Face = "Front"
                        sF.Name = "sF"
                        local frame = Instance.new("Frame",sF)
                        frame.BorderSizePixel = 0
                        frame.Size = UDim2.new(0,sF.AbsoluteSize.X,0,sF.AbsoluteSize.Y)
                        local sB = Instance.new("SurfaceGui",HumanoidRootPart)
                        sB.AlwaysOnTop = true
                        sB.Face = "Back"
                        sB.Name = "sB"
                        local frame = Instance.new("Frame",sB)
                        frame.BorderSizePixel = 0
                        frame.Size = UDim2.new(0,sB.AbsoluteSize.X,0,sB.AbsoluteSize.Y)
                        local sR = Instance.new("SurfaceGui",HumanoidRootPart)
                        sR.AlwaysOnTop = true
                        sR.Face = "Right"
                        sR.Name = "sR"
                        local frame = Instance.new("Frame",sR)
                        frame.BorderSizePixel = 0
                        frame.Size = UDim2.new(0,sR.AbsoluteSize.X,0,sR.AbsoluteSize.Y)
                        local sR = Instance.new("SurfaceGui",HumanoidRootPart)
                        sR.AlwaysOnTop = true
                        sR.Face = "Left"
                        sR.Name = "sL"
                        local frame = Instance.new("Frame",sR)
                        frame.BorderSizePixel = 0
                        frame.Size = UDim2.new(0,sR.AbsoluteSize.X,0,sR.AbsoluteSize.Y)
                        local sR = Instance.new("SurfaceGui",HumanoidRootPart)
                        sR.AlwaysOnTop = true
                        sR.Face = "Top"
                        sR.Name = "sT"
                        local frame = Instance.new("Frame",sR)
                        frame.BorderSizePixel = 0
                        frame.Size = UDim2.new(0,sR.AbsoluteSize.X,0,sR.AbsoluteSize.Y)
                        local sR = Instance.new("SurfaceGui",HumanoidRootPart)
                        sR.AlwaysOnTop = true
                        sR.Face = "Bottom"
                        sR.Name = "sBo"
                        local frame = Instance.new("Frame",sR)
                        frame.BorderSizePixel = 0
                        frame.Size = UDim2.new(0,sR.AbsoluteSize.X,0,sR.AbsoluteSize.Y)
                    end
                end
            end
        end
    end)
end
------------------------------------------------------------
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("MinerCave", "Midnight")

local Combad = Window:NewTab("Combad")

local KillAuraSection = Combad:NewSection("Kill Aura")

KillAuraSection:NewToggle("KillAura", "AutoMaticly kills sorouding players", function(state)
    killAura = state
    killAuraFunc()
end)
KillAuraSection:NewToggle("Lock on target", "AutoMaticly Follow Target", function(state)
    lockonTarget = state
end)
KillAuraSection:NewSlider("Tar Distance", "Mininum Target Distance to hit", 5000, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    TargetDistance = s
end)
KillAuraSection:NewSlider("hit Speed", "the delay between hits in mili seconds", 1000, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    HitSpeed = s
end)

local autoCraftSwordSection = Combad:NewSection("autoCraftSword")
autoCraftSwordSection:NewButton("autoCraftSword", "ButtonInfo", function()
    AutoSwordCraftFunc()
end)
local TpPlayerSection = Combad:NewSection("TpPlayer")
setPart(1,1,1,"SaveTp",true,0,2)
TpPlayerSection:NewButton("Tp Player", "tp to selected player", function()
    local Players = game:GetService("Players")
    if Players:FindFirstChild(selceted) then
        local WorkSpace = game:GetService("Workspace")
        if WorkSpace:FindFirstChild(selceted) then
            WorkSpace:FindFirstChild("SaveTp").Position = Vector3.new(
                WorkSpace:FindFirstChild(selceted).HumanoidRootPart.Position.X,
                WorkSpace:FindFirstChild(selceted).HumanoidRootPart.Position.Y-4,
                WorkSpace:FindFirstChild(selceted).HumanoidRootPart.Position.Z
            )
            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = WorkSpace:FindFirstChild(selceted).HumanoidRootPart.CFrame
        end
    end
end)

local dropdown = TpPlayerSection:NewDropdown("PlayerList","List of all the players that render", {"  "}, function(Curend)
    selceted = Curend
    print(Curend)
end)

TpPlayerSection:NewButton("Update Player List", "Refreshes Dropdown", function()
    local newList = {}
    local newListWeigt = 0
    local WorkSpace = game:GetService("Workspace")
    for i, v in pairs(game:GetService("Players"):GetChildren()) do
        if WorkSpace:FindFirstChild(v.Name) then
            newListWeigt = newListWeigt + 1
            newList[newListWeigt] = v.Name
        end
    end
    dropdown:Refresh(newList)
end)

local AutoLogSection = Combad:NewSection("Auto Log")

AutoLogSection:NewToggle("Auto Log", "Automaticly kicks you from the game when you have low healf", function(state)
    AutoLog = state
    AutoLogFunc()
end)

AutoLogSection:NewSlider("healf to kick", "select the amound of healf you need to be kicked", 10, 3, function(s) -- 500 (MaxValue) | 0 (MinValue)
    AutoLogLevens = s+0.1
end)

local movement = Window:NewTab("Movement")

local PlayerSpeedSection = movement:NewSection("Speed")

PlayerSpeedSection:NewToggle("Player Speed", "turn on the speed", function(state)
    setPlayerSpeed = state
    setPlayerSpeedFunc()
end)

PlayerSpeedSection:NewSlider("Speed Value", "speek for it self", 100, 16, function(s) -- 500 (MaxValue) | 0 (MinValue)
    playerSpeed = s
end)

local FreecamSection = movement:NewSection("Freecam")
local canFreecam = false
FreecamSection:NewToggle("FreeCam", "Make sure nofalldemage is anebeld", function(state)
    canFreecam = state
end)

FreecamSection:NewKeybind("FreeCam KeyBind", "", Enum.KeyCode.F, function()
    if canFreecam then
        if FreeCam then
            FreeCam = false
        else
            FreeCam = true
            FreeCamFunc()
        end
    end
end)

FreecamSection:NewKeybind("Tp on spot and diable freecam", "", Enum.KeyCode.R, function()
    if canFreecam and FreeCam then
        FreeCam = false
        if game:GetService("Workspace"):FindFirstChild(game:GetService("Players").LocalPlayer.Name) then
            game:GetService("Workspace"):FindFirstChild(game:GetService("Players").LocalPlayer.Name).HumanoidRootPart.CFrame = game:GetService("Workspace").CemeraPart.CFrame
        end
    end
end)

FreecamSection:NewKeybind("Tp on spot", "", Enum.KeyCode.C, function()
    if canFreecam and FreeCam then
        if game:GetService("Workspace"):FindFirstChild(game:GetService("Players").LocalPlayer.Name) then
            game:GetService("Workspace"):FindFirstChild(game:GetService("Players").LocalPlayer.Name).HumanoidRootPart.CFrame = game:GetService("Workspace").CemeraPart.CFrame
            local x = game:GetService("Workspace"):FindFirstChild(game:GetService("Players").LocalPlayer.Name).HumanoidRootPart.Position.X
            local y = game:GetService("Workspace"):FindFirstChild(game:GetService("Players").LocalPlayer.Name).HumanoidRootPart.Position.Y
            local z = game:GetService("Workspace"):FindFirstChild(game:GetService("Players").LocalPlayer.Name).HumanoidRootPart.Position.Z
            setAllSaveParts(x,y,z)
        end
    end
end)

FreecamSection:NewSlider("Normal Speed", "", 30, 1, function(s) -- 500 (MaxValue) | 0 (MinValue)
    FSpeed = s
end)

FreecamSection:NewSlider("Up Down Speed", "SliderInfo", 15, 1, function(s) -- 500 (MaxValue) | 0 (MinValue)
    USpeed = s
end)

local Misc = Window:NewTab("Misc")

local NukerSection = Misc:NewSection("Nuker")

NukerSection:NewToggle("Nuke", "this can only break week blocks", function(state)
    Nuker = state
    NukerFunc()
end)

NukerSection:NewSlider("Nuke Size", "the size of the nuke", 6, 2, function(s) -- 500 (MaxValue) | 0 (MinValue)
    NukerSize = s
end)

local NoFallDemageSection = Misc:NewSection("NoFallDemage")

NoFallDemageSection:NewButton("No fall demage", "removes fall demage and also removes sufication", function()
    if game:GetService("ReplicatedStorage").GameRemotes:FindFirstChild("Demo") then
        game:GetService("ReplicatedStorage").GameRemotes.Demo.Name = "Demo1"
    end
end)
--game:GetService("ReplicatedStorage").GameRemotes.Demo

local Visuals = Window:NewTab("Visuals")

local EspSection = Visuals:NewSection("Esp")
local OldEsp = false
EspSection:NewButton("Esp", "turn on the esp", function()
    Esp = true
    if OldEsp == false then
        EspFunc()
    end
    OldEsp = true
end)

EspSection:NewColorPicker("Normal Color", "Normal esp color", Color3.fromRGB(0.0348226,1,0), function(color)
    EspColor = color
    print(color)
end)

EspSection:NewColorPicker("target Color", "give the targed from your kill aura a color", Color3.fromRGB(1,0,0), function(color)
    EspColorDemage = color
    print(color)
end)

EspSection:NewSlider("esp trans", "set the transparency of the esp", 10, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    EspTrans = s/10
end)